import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * This file was generated by the Gradle 'init' task.
 */

// https://github.com/gradle/gradle/issues/15383
val libs = the<org.gradle.accessors.dm.LibrariesForLibs>()

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm")
    `java-test-fixtures`
    id("org.gradle.test-retry")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation(platform(libs.http4k.bom))
    implementation(libs.result4k)
    testFixturesApi(libs.bundles.junit)
    testFixturesApi(libs.jqwik)

    compileOnly("org.jetbrains:annotations:23.0.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java { toolchain { languageVersion = JavaLanguageVersion.of(21) } }

tasks.named<Test>("test") {
    useJUnitPlatform { includeEngines("jqwik", "junit-jupiter") }
    systemProperty("junit.jupiter.execution.parallel.enabled", "true")
    systemProperty("junit.jupiter.execution.parallel.mode.default", "concurrent")
    systemProperty("junit.jupiter.execution.parallel.mode.classes.default", "concurrent")
    systemProperty("junit.jupiter.execution.timeout.test.method.default", "2s")
    systemProperty("junit.jupiter.execution.timeout.mode", "disabled_on_debug")
}

tasks.withType(KotlinCompile::class).all {
    compilerOptions {
        freeCompilerArgs.addAll(
            "-Xnullability-annotations=@org.jspecify.annotations:strict",
            "-Xemit-jvm-type-annotations",
            "-Xconsistent-data-class-copy-visibility",
        )
        javaParameters = true
    }
}
