import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * This file was generated by the Gradle 'init' task.
 */

// https://github.com/gradle/gradle/issues/15383
val libs = the<org.gradle.accessors.dm.LibrariesForLibs>()

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm")
    `java-test-fixtures`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation(platform(libs.http4k.bom))
    implementation(libs.result4k)
    testFixturesApi(libs.strikt.core)
    testFixturesApi(libs.junit.jupiter)
    testFixturesApi(libs.jqwik.kotlin)
    testRuntimeOnly(libs.junit.platform.launcher)
    compileOnly("org.jetbrains:annotations:23.0.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named<Test>("test") {
    useJUnitPlatform()
    systemProperty("junit.jupiter.execution.timeout.test.method.default", "2s")
    systemProperty("junit.jupiter.execution.timeout.mode", "disabled_on_debug")
}

tasks.withType(KotlinCompile::class).all {
    compilerOptions {
        freeCompilerArgs.add("-Xnullability-annotations=@org.jspecify.annotations:strict")
        freeCompilerArgs.add("-Xemit-jvm-type-annotations")
        javaParameters = true
    }
}
